version: "3.8"

services:
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=
    depends_on:
      - account-db
      - account-service
      - transaction-service
      - loan-service
      - notification-service
      - mock-payment-service

  account-service:
    build:
      context: ./services/account-service
    container_name: account-service
    ports:
      - "8081:8081"
    depends_on:
      - account-db
      - kafka

  transaction-service:
    build:
      context: ./services/transaction-service
    container_name: transaction-service
    ports:
      - "8082:8082"
    depends_on:
      - account-db
      - kafka

  loan-service:
    build:
      context: ./services/loan-service
    container_name: loan-service
    ports:
      - "8083:8083"
    depends_on:
      - account-db
      - kafka

  notification-service:
    build:
      context: ./services/notification-service
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      - kafka

  mock-payment-service:
    build:
      context: ./services/mock-payment-service
    container_name: mock-payment-service
    ports:
      - "8085:8085"
    depends_on:
      - kafka

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - api-gateway

  account-db:
    image: postgres:15-alpine
    container_name: account-db
    environment:
      POSTGRES_DB: accountdb
      POSTGRES_USER: accountuser
      POSTGRES_PASSWORD: accountpass
    ports:
      - "5432:5432"
    volumes:
      - account-db-data:/var/lib/postgresql/data
      - ./postgres/account-init.sql:/docker-entrypoint-initdb.d/account-init.sql

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_OFFSET_TOPICS_NUM_PARTITIONS=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - "8086:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  jaeger:
    image: jaegertracing/all-in-one:1.54
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14250:14250" # OTLP gRPC
      - "6831:6831"   # UDP sender

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "472"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  account-db-data:
  kafka-data:
